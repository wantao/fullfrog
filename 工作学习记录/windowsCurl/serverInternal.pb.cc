// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "serverInternal.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protoc {
namespace serverInternal {

namespace {

const ::google::protobuf::Descriptor* NineOneLoginAuthReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NineOneLoginAuthReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* NineOneLoginAuthAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NineOneLoginAuthAck_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_serverInternal_2eproto() {
  protobuf_AddDesc_serverInternal_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "serverInternal.proto");
  GOOGLE_CHECK(file != NULL);
  NineOneLoginAuthReq_descriptor_ = file->message_type(0);
  static const int NineOneLoginAuthReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NineOneLoginAuthReq, uin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NineOneLoginAuthReq, sessionid_),
  };
  NineOneLoginAuthReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NineOneLoginAuthReq_descriptor_,
      NineOneLoginAuthReq::default_instance_,
      NineOneLoginAuthReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NineOneLoginAuthReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NineOneLoginAuthReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NineOneLoginAuthReq));
  NineOneLoginAuthAck_descriptor_ = file->message_type(1);
  static const int NineOneLoginAuthAck_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NineOneLoginAuthAck, errorcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NineOneLoginAuthAck, errordesc_),
  };
  NineOneLoginAuthAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NineOneLoginAuthAck_descriptor_,
      NineOneLoginAuthAck::default_instance_,
      NineOneLoginAuthAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NineOneLoginAuthAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NineOneLoginAuthAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NineOneLoginAuthAck));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_serverInternal_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NineOneLoginAuthReq_descriptor_, &NineOneLoginAuthReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NineOneLoginAuthAck_descriptor_, &NineOneLoginAuthAck::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_serverInternal_2eproto() {
  delete NineOneLoginAuthReq::default_instance_;
  delete NineOneLoginAuthReq_reflection_;
  delete NineOneLoginAuthAck::default_instance_;
  delete NineOneLoginAuthAck_reflection_;
}

void protobuf_AddDesc_serverInternal_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_options_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024serverInternal.proto\022\025protoc.serverInt"
    "ernal\032\roptions.proto\"5\n\023NineOneLoginAuth"
    "Req\022\013\n\003Uin\030\001 \002(\t\022\021\n\tSessionId\030\002 \002(\t\";\n\023N"
    "ineOneLoginAuthAck\022\021\n\tErrorCode\030\001 \002(\005\022\021\n"
    "\tErrorDesc\030\002 \002(\t", 176);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "serverInternal.proto", &protobuf_RegisterTypes);
  NineOneLoginAuthReq::default_instance_ = new NineOneLoginAuthReq();
  NineOneLoginAuthAck::default_instance_ = new NineOneLoginAuthAck();
  NineOneLoginAuthReq::default_instance_->InitAsDefaultInstance();
  NineOneLoginAuthAck::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_serverInternal_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_serverInternal_2eproto {
  StaticDescriptorInitializer_serverInternal_2eproto() {
    protobuf_AddDesc_serverInternal_2eproto();
  }
} static_descriptor_initializer_serverInternal_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int NineOneLoginAuthReq::kUinFieldNumber;
const int NineOneLoginAuthReq::kSessionIdFieldNumber;
#endif  // !_MSC_VER

NineOneLoginAuthReq::NineOneLoginAuthReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NineOneLoginAuthReq::InitAsDefaultInstance() {
}

NineOneLoginAuthReq::NineOneLoginAuthReq(const NineOneLoginAuthReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NineOneLoginAuthReq::SharedCtor() {
  _cached_size_ = 0;
  uin_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sessionid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NineOneLoginAuthReq::~NineOneLoginAuthReq() {
  SharedDtor();
}

void NineOneLoginAuthReq::SharedDtor() {
  if (uin_ != &::google::protobuf::internal::kEmptyString) {
    delete uin_;
  }
  if (sessionid_ != &::google::protobuf::internal::kEmptyString) {
    delete sessionid_;
  }
  if (this != default_instance_) {
  }
}

void NineOneLoginAuthReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NineOneLoginAuthReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NineOneLoginAuthReq_descriptor_;
}

const NineOneLoginAuthReq& NineOneLoginAuthReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_serverInternal_2eproto();  return *default_instance_;
}

NineOneLoginAuthReq* NineOneLoginAuthReq::default_instance_ = NULL;

NineOneLoginAuthReq* NineOneLoginAuthReq::New() const {
  return new NineOneLoginAuthReq;
}

void NineOneLoginAuthReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_uin()) {
      if (uin_ != &::google::protobuf::internal::kEmptyString) {
        uin_->clear();
      }
    }
    if (has_sessionid()) {
      if (sessionid_ != &::google::protobuf::internal::kEmptyString) {
        sessionid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NineOneLoginAuthReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Uin = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uin()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uin().data(), this->uin().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_SessionId;
        break;
      }
      
      // required string SessionId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SessionId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sessionid().data(), this->sessionid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NineOneLoginAuthReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string Uin = 1;
  if (has_uin()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uin().data(), this->uin().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->uin(), output);
  }
  
  // required string SessionId = 2;
  if (has_sessionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->sessionid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NineOneLoginAuthReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string Uin = 1;
  if (has_uin()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uin().data(), this->uin().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uin(), target);
  }
  
  // required string SessionId = 2;
  if (has_sessionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sessionid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NineOneLoginAuthReq::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string Uin = 1;
    if (has_uin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uin());
    }
    
    // required string SessionId = 2;
    if (has_sessionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sessionid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NineOneLoginAuthReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NineOneLoginAuthReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NineOneLoginAuthReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NineOneLoginAuthReq::MergeFrom(const NineOneLoginAuthReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uin()) {
      set_uin(from.uin());
    }
    if (from.has_sessionid()) {
      set_sessionid(from.sessionid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NineOneLoginAuthReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NineOneLoginAuthReq::CopyFrom(const NineOneLoginAuthReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NineOneLoginAuthReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void NineOneLoginAuthReq::Swap(NineOneLoginAuthReq* other) {
  if (other != this) {
    std::swap(uin_, other->uin_);
    std::swap(sessionid_, other->sessionid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NineOneLoginAuthReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NineOneLoginAuthReq_descriptor_;
  metadata.reflection = NineOneLoginAuthReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NineOneLoginAuthAck::kErrorCodeFieldNumber;
const int NineOneLoginAuthAck::kErrorDescFieldNumber;
#endif  // !_MSC_VER

NineOneLoginAuthAck::NineOneLoginAuthAck()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NineOneLoginAuthAck::InitAsDefaultInstance() {
}

NineOneLoginAuthAck::NineOneLoginAuthAck(const NineOneLoginAuthAck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NineOneLoginAuthAck::SharedCtor() {
  _cached_size_ = 0;
  errorcode_ = 0;
  errordesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NineOneLoginAuthAck::~NineOneLoginAuthAck() {
  SharedDtor();
}

void NineOneLoginAuthAck::SharedDtor() {
  if (errordesc_ != &::google::protobuf::internal::kEmptyString) {
    delete errordesc_;
  }
  if (this != default_instance_) {
  }
}

void NineOneLoginAuthAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NineOneLoginAuthAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NineOneLoginAuthAck_descriptor_;
}

const NineOneLoginAuthAck& NineOneLoginAuthAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_serverInternal_2eproto();  return *default_instance_;
}

NineOneLoginAuthAck* NineOneLoginAuthAck::default_instance_ = NULL;

NineOneLoginAuthAck* NineOneLoginAuthAck::New() const {
  return new NineOneLoginAuthAck;
}

void NineOneLoginAuthAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    errorcode_ = 0;
    if (has_errordesc()) {
      if (errordesc_ != &::google::protobuf::internal::kEmptyString) {
        errordesc_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NineOneLoginAuthAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ErrorCode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_ErrorDesc;
        break;
      }
      
      // required string ErrorDesc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ErrorDesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errordesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->errordesc().data(), this->errordesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NineOneLoginAuthAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 ErrorCode = 1;
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorcode(), output);
  }
  
  // required string ErrorDesc = 2;
  if (has_errordesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->errordesc().data(), this->errordesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->errordesc(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NineOneLoginAuthAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ErrorCode = 1;
  if (has_errorcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorcode(), target);
  }
  
  // required string ErrorDesc = 2;
  if (has_errordesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->errordesc().data(), this->errordesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errordesc(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NineOneLoginAuthAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ErrorCode = 1;
    if (has_errorcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->errorcode());
    }
    
    // required string ErrorDesc = 2;
    if (has_errordesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->errordesc());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NineOneLoginAuthAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NineOneLoginAuthAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NineOneLoginAuthAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NineOneLoginAuthAck::MergeFrom(const NineOneLoginAuthAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_errordesc()) {
      set_errordesc(from.errordesc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NineOneLoginAuthAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NineOneLoginAuthAck::CopyFrom(const NineOneLoginAuthAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NineOneLoginAuthAck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void NineOneLoginAuthAck::Swap(NineOneLoginAuthAck* other) {
  if (other != this) {
    std::swap(errorcode_, other->errorcode_);
    std::swap(errordesc_, other->errordesc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NineOneLoginAuthAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NineOneLoginAuthAck_descriptor_;
  metadata.reflection = NineOneLoginAuthAck_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace serverInternal
}  // namespace protoc

// @@protoc_insertion_point(global_scope)
